set nocompatible " be iMproved

" For vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

" Dependencies of snipmate
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'honza/vim-snippets'

" Snippets for for expression autocomplete
Bundle 'garbas/vim-snipmate'

" Git tools
Bundle 'tpope/vim-fugitive'

" Dependency management
Bundle 'gmarik/vundle'

" Rails
Bundle 'tpope/vim-rails'

" Dash documentation
Bundle 'rizzatti/dash.vim'

" Commenting and uncommenting
Bundle 'tomtom/tcomment_vim'

" Vim Ruby
Bundle 'vim-ruby/vim-ruby'

" Code surround
Bundle 'tpope/vim-surround'

" Autogenerate pairs for brackets
" Bundle 'jiangmiao/auto-pairs'

" Tab completions
Bundle 'ervandew/supertab'

" Fuzzy finder for vim (CTRL + P)
Bundle 'kien/ctrlp.vim'

" Navigation tree
Bundle 'scrooloose/nerdtree'

" Markdown syntax highlighting
Bundle 'plasticboy/vim-markdown'

" Mustache Handlebars syntax highlighting
Bundle 'mustache/vim-mustache-handlebars'

set autoindent   " Use autoindenting
set rnu          " Use relative line numbers
set nu           " Show line number for current line
set hlsearch     " High search areas
set incsearch    " Search incrementally as you type
set ignorecase   " Ignore case in the file
set smartcase    " Smart case detection

# set clipboard=unnamed " Use system clipboard

let mapleader=','     " Use comma as leader key

" Remove highlights with leader + enter
nmap <Leader><CR> :nohlsearch<CR>

" Open and close Nerdtree with leader + q
nmap <leader>q :NERDTreeToggle<CR>

" Set tab stops and shift width
set tabstop=2 softtabstop=0 expandtab shiftwidth=2 smarttab

" Set backspace markers
set backspace=indent,eol,start

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Removing escape
ino jj <esc>
cno jj <c-c>
vno v <esc>

syntax on                 " Enable syntax highlighting
filetype plugin indent on " Enable filetype-specific indenting and plugins

augroup myfiletypes
  " Clear old autocmds in group
  autocmd!

  " autoindent with two spaces, always expand tabs
  autocmd FileType ruby,eruby,yaml,markdown set ai sw=2 sts=2 et
  autocmd FileType go setlocal shiftwidth=4
augroup END

" Show trailing whitespace and spaces before a tab
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
